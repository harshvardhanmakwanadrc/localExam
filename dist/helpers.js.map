{"version":3,"file":"helpers.js","names":["_constants","require","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","toPrimitive","call","TypeError","String","Number","isEmpty","exports","obj","getDisplayName","WrappedComponent","displayName","name","shouldRenderExpiredPage","exam","examType","type","passedDueDate","passed_due_date","attempt","ExamType","PRACTICE","attempt_id","IS_INCOMPLETE_STATUS","attempt_status","generateHumanizedTime","timeRemainingSeconds","hours","minutes","remainingTime","Math","floor","concat","appendTimerEnd","activeAttempt","time_remaining_seconds","timerEnds","Date","now","updatedActiveAttempt","timer_ends","toISOString"],"sources":["../src/helpers.js"],"sourcesContent":["import { ExamType, IS_INCOMPLETE_STATUS } from './constants';\n\nexport const isEmpty = (obj) => {\n  if (!obj) { return true; }\n  return Object.keys(obj).length === 0;\n};\n\nexport const getDisplayName = (WrappedComponent) => WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\nexport const shouldRenderExpiredPage = (exam) => {\n  const { type: examType, passed_due_date: passedDueDate, attempt } = exam;\n  if (!passedDueDate || examType === ExamType.PRACTICE) {\n    return false;\n  }\n  return (isEmpty(attempt) || !attempt.attempt_id || IS_INCOMPLETE_STATUS(attempt.attempt_status));\n};\n\nexport const generateHumanizedTime = (timeRemainingSeconds) => {\n  let hours = 0;\n  let minutes = 0;\n  let remainingTime = '';\n\n  hours = Math.floor(timeRemainingSeconds / 60 / 60);\n  minutes = Math.floor(timeRemainingSeconds / 60) % 60;\n\n  if (hours !== 0) {\n    remainingTime += `${hours} hour`;\n    if (hours >= 2) {\n      remainingTime += 's';\n    }\n    remainingTime += ' and ';\n  }\n  remainingTime += `${minutes} minute`;\n  if (minutes !== 1) {\n    remainingTime += 's';\n  }\n  return remainingTime;\n};\n\n// The only information we get on the remaining time on the active exam attempt\n// from the endpoint is the remaining seconds. We need to have a fixed time reference\n// on the time limit to be able to calculate the remaining time accurately.\nexport const appendTimerEnd = (activeAttempt) => {\n  if (!activeAttempt?.time_remaining_seconds) {\n    return activeAttempt;\n  }\n\n  const timerEnds = new Date(Date.now() + activeAttempt.time_remaining_seconds * 1000);\n  const updatedActiveAttempt = {\n    ...activeAttempt,\n    timer_ends: timerEnds.toISOString(),\n  };\n\n  return updatedActiveAttempt;\n};\n"],"mappings":"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","ignoreList":[]}