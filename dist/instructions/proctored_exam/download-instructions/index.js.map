{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_reactRedux","_propTypes","_interopRequireDefault","_frontendPlatform","_i18n","_paragon","_constants","_data","_WarningModal","_api","_messages","_LtiProviderInstructions","_RestProviderInstructions","_RPNowInstructions","_DownloadButtons","_Footer","_SkipProctoredExamButton","_jsxRuntime","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","length","l","Symbol","iterator","f","o","next","done","push","value","isArray","DownloadSoftwareProctoredExamInstructions","_ref","intl","skipProctoredExam","_useSelector","useSelector","state","specialExams","proctoringSettings","exam","allowProctoringOptOut","dispatch","useDispatch","attempt","courseId","course_id","sequenceId","content_id","pollUrl","exam_started_poll_url","examCode","attempt_code","attemptId","attempt_id","downloadUrl","software_download_url","useLegacyAttemptApi","use_legacy_attempt_api","providerName","provider_name","supportEmail","provider_tech_support_email","supportPhone","provider_tech_support_phone","supportURL","provider_tech_support_url","proctoringBackend","exam_proctoring_backend","examHasLtiProvider","_ref2","instructions","_useState","useState","_useState2","systemCheckStatus","setSystemCheckStatus","_useState3","_useState4","downloadClicked","setDownloadClicked","withProviderInstructions","launchSoftwareUrl","concat","getConfig","EXAMS_BASE_URL","handleDownloadClick","pollExamAttempt","then","data","status","ExamStatus","READY_TO_START","softwareDownloadAttempt","window","location","assign","handleStartExamClick","getExamAttemptsData","providerInstructions","jsx","code","jsxs","children","Container","className","isOpen","Boolean","title","formatMessage","messages","softwareLoadedModalTitle","cannotStartModalTitle","body","softwareLoadedModalBody","cannotStartModalBody","handleClose","FormattedMessage","id","defaultMessage","onDownloadClick","onStartExamClick","handleClick","propTypes","intlShape","isRequired","PropTypes","func","_default","exports","injectIntl"],"sources":["../../../../src/instructions/proctored_exam/download-instructions/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Container } from '@openedx/paragon';\nimport { ExamStatus } from '../../../constants';\nimport { getExamAttemptsData } from '../../../data';\nimport WarningModal from '../WarningModal';\nimport { pollExamAttempt, softwareDownloadAttempt } from '../../../data/api';\nimport messages from '../messages';\nimport LtiProviderExamInstructions from './LtiProviderInstructions';\nimport RestProviderInstructions from './RestProviderInstructions';\nimport RPNowInstructions from './RPNowInstructions';\nimport DownloadButtons from './DownloadButtons';\nimport Footer from '../Footer';\nimport SkipProctoredExamButton from '../SkipProctoredExamButton';\n\nconst DownloadSoftwareProctoredExamInstructions = ({ intl, skipProctoredExam }) => {\n  const {\n    proctoringSettings,\n    exam,\n    allowProctoringOptOut,\n  } = useSelector(state => state.specialExams);\n\n  const dispatch = useDispatch();\n\n  const {\n    attempt,\n    course_id: courseId,\n    content_id: sequenceId,\n  } = exam;\n\n  const {\n    exam_started_poll_url: pollUrl,\n    attempt_code: examCode,\n    attempt_id: attemptId,\n    software_download_url: downloadUrl,\n    use_legacy_attempt_api: useLegacyAttemptApi,\n  } = attempt;\n\n  const {\n    provider_name: providerName,\n    provider_tech_support_email: supportEmail,\n    provider_tech_support_phone: supportPhone,\n    provider_tech_support_url: supportURL,\n    exam_proctoring_backend: proctoringBackend,\n  } = proctoringSettings;\n\n  const examHasLtiProvider = !useLegacyAttemptApi;\n  const { instructions } = proctoringBackend || {};\n  const [systemCheckStatus, setSystemCheckStatus] = useState('');\n  const [downloadClicked, setDownloadClicked] = useState(false);\n  const withProviderInstructions = instructions && instructions.length > 0;\n  const launchSoftwareUrl = examHasLtiProvider\n    ? `${getConfig().EXAMS_BASE_URL}/lti/start_proctoring/${attemptId}` : downloadUrl;\n\n  const handleDownloadClick = () => {\n    pollExamAttempt(pollUrl, sequenceId)\n      .then((data) => {\n        if (data.status === ExamStatus.READY_TO_START) {\n          setSystemCheckStatus('success');\n        } else {\n          // TODO: This call will circumvent the thunk for startProctoringSoftwareDownload\n          // which is a bit odd and would handle useLegacyAttempt for us.\n          // There's an opportunity to refactor and clean this up a bit.\n          softwareDownloadAttempt(attemptId, useLegacyAttemptApi);\n          window.location.assign(launchSoftwareUrl);\n        }\n      });\n    setDownloadClicked(true);\n  };\n\n  const handleStartExamClick = () => {\n    pollExamAttempt(pollUrl, sequenceId)\n      .then((data) => (\n        data.status === ExamStatus.READY_TO_START\n          ? dispatch(getExamAttemptsData(courseId, sequenceId))\n          : setSystemCheckStatus('failure')\n      ));\n  };\n\n  function providerInstructions() {\n    if (examHasLtiProvider) {\n      return (\n        <LtiProviderExamInstructions\n          providerName={providerName}\n          supportEmail={supportEmail}\n          supportPhone={supportPhone}\n          supportURL={supportURL}\n        />\n      );\n    }\n    if (withProviderInstructions) {\n      return (\n        <RestProviderInstructions\n          providerName={providerName}\n          supportEmail={supportEmail}\n          supportPhone={supportPhone}\n          instructions={instructions}\n        />\n      );\n    }\n    return (\n      <RPNowInstructions code={examCode} />\n    );\n  }\n\n  return (\n    <div>\n      <Container className=\"border py-5 mb-4\">\n        <WarningModal\n          isOpen={Boolean(systemCheckStatus)}\n          title={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalTitle)\n              : intl.formatMessage(messages.cannotStartModalTitle)\n          }\n          body={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalBody)\n              : intl.formatMessage(messages.cannotStartModalBody)\n          }\n          handleClose={() => setSystemCheckStatus('')}\n        />\n        <div className=\"h3\" data-testid=\"exam-instructions-title\">\n          <FormattedMessage\n            id=\"exam.DownloadSoftwareProctoredExamInstructions.title\"\n            defaultMessage=\"Set up and start your proctored exam.\"\n          />\n        </div>\n        { providerInstructions() }\n        <DownloadButtons\n          downloadUrl={launchSoftwareUrl}\n          onDownloadClick={handleDownloadClick}\n          onStartExamClick={handleStartExamClick}\n          downloadClicked={downloadClicked}\n        />\n        {!examHasLtiProvider && !withProviderInstructions && (\n          <div className=\"pt-3\">\n            <div className=\"h4\">\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.title\"\n                defaultMessage=\"Step 3.\"\n              />\n            </div>\n            <p>\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.body\"\n                defaultMessage={'For security and exam integrity reasons, '\n                + 'we ask you to sign in to your edX account. Then we will '\n                + 'direct you to the RPNow proctoring experience.'}\n              />\n            </p>\n          </div>\n        )}\n      </Container>\n      {allowProctoringOptOut && <SkipProctoredExamButton handleClick={skipProctoredExam} />}\n      <Footer />\n    </div>\n  );\n};\n\nDownloadSoftwareProctoredExamInstructions.propTypes = {\n  intl: intlShape.isRequired,\n  skipProctoredExam: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(DownloadSoftwareProctoredExamInstructions);\n"],"mappings":"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","ignoreList":[]}